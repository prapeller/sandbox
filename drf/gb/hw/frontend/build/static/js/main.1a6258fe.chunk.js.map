{"version":3,"sources":["logo.svg","Components/UserList.js","Components/Footer.js","Components/ProjectList.js","Components/TodoList.js","Components/ProjectDetail.js","Components/LoginForm.js","Components/ProjectForm.js","Components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["UserItem","user","id","username","date_joined","last_login","email","first_name","last_name","is_staff","is_superuser","groups","user_permissions","UserList","users","map","u","Footer","ProjectItem","project","deleteProject","to","name","onClick","type","ProjectList","projects","p","TodoItem","todo","deactivateTodo","creator","text","is_active","created_at","updated_at","TodoList","todos","t","link","ProjectDetail","useParams","filter","parseInt","LoginForm","prop","state","event","this","setState","target","value","props","form_get_token","login","password","preventDefault","onSubmit","handleSubmit","placeholder","onChange","handleChange","React","Component","ProjectForm","selectedOptions","i","length","push","item","console","log","createProject","multiple","handleUsersChange","TodoForm","createTodo","handleProjectChange","App","token","localStorage","getItem","get_data","headers","get_headers","axios","get","then","response","data","results","catch","err","is_authenticated","post","setItem","error","delete","findIndex","x","logout","exact","path","element","get_token","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,I,4BCATA,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OACI,+BACI,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,WACV,6BAAKF,EAAKG,cACV,6BAAKH,EAAKI,aACV,6BAAKJ,EAAKK,QACV,6BAAKL,EAAKM,aACV,6BAAKN,EAAKO,YACV,uCAAQP,EAAKQ,YACb,uCAAQR,EAAKS,gBACb,6BAAKT,EAAKU,SACV,6BAAKV,EAAKW,uBAwBPC,EAnBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,OACI,kCACI,oCACA,0CACA,6CACA,4CACA,uCACA,4CACA,2CACA,0CACA,8CACA,wCACA,6CACCA,EAAMC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAUf,KAAMe,W,OCxB/BC,G,MANA,WACX,OACI,2C,OCFFC,EAAc,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,cAC3B,OACI,+BACI,6BAAKD,EAAQjB,KACb,6BAAI,cAAC,IAAD,CAAMmB,GAAE,mBAAcF,EAAQjB,IAA9B,SAAqCiB,EAAQG,SACjD,6BAAI,wBAAQC,QAAS,kBAAIH,EAAcD,EAAQjB,KAAKsB,KAAM,SAAtD,0BAeDC,EAVK,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,SAAUN,EAAmB,EAAnBA,cAC5B,OACI,kCACI,oCACA,sCACCM,EAASX,KAAI,SAACY,GAAD,OAAO,cAAC,EAAD,CAAaR,QAASQ,EAAGP,cAAeA,WCjBnEQ,EAAW,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,eACrB,OACI,+BACI,6BAAKD,EAAK3B,KACV,6BAAK2B,EAAKE,UACV,6BAAKF,EAAKG,OACV,6BAAKH,EAAKV,UACV,uCAAQU,EAAKI,aACb,6BAAKJ,EAAKK,aACV,6BAAKL,EAAKM,aACV,6BAAI,wBAAQZ,QAAS,kBAAIO,EAAeD,EAAK3B,KAAKsB,KAAM,SAApD,8BAoBDY,EAfE,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOP,EAAoB,EAApBA,eACtB,OACI,kCACI,oCACA,4CACA,sCACA,4CACA,2CACA,yCACA,yCACCO,EAAMtB,KAAI,SAACuB,GAAD,OAAO,cAAC,EAAD,CAAUT,KAAMS,EAAGR,eAAgBA,WCvB3DZ,EAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OACI,+BACI,6BAAKA,EAAQjB,KACb,6BAAI,cAAC,IAAD,CAAMmB,GAAE,mBAAcF,EAAQjB,IAA9B,SAAqCiB,EAAQG,SACjD,6BAAKH,EAAQoB,OACb,6BAAKpB,EAAQL,YA0BV0B,EArBO,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SACfxB,EAAMuC,cAANvC,GACDyB,EAAID,EAASgB,QAAO,SAACf,GAAD,OAAOA,EAAEzB,KAAQyC,SAASzC,MAAM,GAExD,OACI,kCACI,oCACA,sCACA,sCACA,uCACC,cAAC,EAAD,CAAaiB,QAASQ,Q,QCapBiB,E,kDAjCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT,MAAS,GACT,SAAY,IAJF,E,gDAQlB,SAAaC,GACTC,KAAKC,SAAL,eACKF,EAAMG,OAAO5B,KAAOyB,EAAMG,OAAOC,U,0BAI1C,SAAaJ,GAETC,KAAKI,MAAMC,eAAeL,KAAKF,MAAMQ,MAAON,KAAKF,MAAMS,UACvDR,EAAMS,mB,oBAGV,WAAU,IAAD,OACL,OACI,uBAAMC,SAAU,SAACV,GAAD,OAAW,EAAKW,aAAaX,IAA7C,UACI,uBAAOvB,KAAK,OAAOF,KAAM,QAASqC,YAAa,QAASR,MAAOH,KAAKF,MAAMQ,MACnEM,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,MAC9C,uBAAOvB,KAAK,WAAWF,KAAM,WAAYqC,YAAa,WAAYR,MAAOH,KAAKF,MAAMK,MAC7ES,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,MAC9C,uBAAOvB,KAAK,SAAS2B,MAAO,2B,GA5BpBW,IAAMC,WCwDfC,E,kDAvDX,WAAYnB,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT,KAAQ,GACR,KAAQ,GACR,MAAS,IALC,E,gDASlB,SAAaC,GACTC,KAAKC,SAAL,eACKF,EAAMG,OAAO5B,KAAOyB,EAAMG,OAAOC,U,+BAI1C,SAAkBJ,GACd,IAAIjC,EAAQ,GACZ,GAAKiC,EAAMG,OAAOe,gBAAlB,CAIA,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAMG,OAAOe,gBAAgBE,OAAQD,IAErDpD,EAAMsD,KAAKzB,SAASI,EAAMG,OAAOe,gBAAgBI,KAAKH,GAAGf,QAG7DH,KAAKC,SAAS,CACV,MAASnC,SATTkC,KAAKF,MAAL,MAAsB,K,0BAa9B,SAAaC,GACTuB,QAAQC,IAAR,eAAoBvB,KAAKF,MAAMxB,KAA/B,iBAA4C0B,KAAKF,MAAMP,KAAvD,kBAAqES,KAAKF,MAAMhC,QAChFkC,KAAKI,MAAMoB,cAAcxB,KAAKF,MAAMxB,KAAM0B,KAAKF,MAAMP,KAAMS,KAAKF,MAAMhC,OACtEiC,EAAMS,mB,oBAGV,WAAU,IAAD,OACL,OACI,uBAAMC,SAAU,SAACV,GAAD,OAAW,EAAKW,aAAaX,IAA7C,UACI,uBAAOvB,KAAK,OAAOF,KAAM,OAAQqC,YAAa,OAAQR,MAAOH,KAAKF,MAAMxB,KACjEsC,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,MAC9C,uBAAOvB,KAAK,OAAOF,KAAM,OAAQqC,YAAa,OAAQR,MAAOH,KAAKF,MAAMP,KACjEqB,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,MAE9C,wBAAQ0B,UAAQ,EAACnD,KAAM,QACfsC,SAAU,SAACb,GAAD,OAAW,EAAK2B,kBAAkB3B,IADpD,SAEKC,KAAKI,MAAMtC,MAAMC,KAAI,SAACd,GAAD,OAAU,wBAAQkD,MAAOlD,EAAKC,GAApB,SAAyBD,EAAKE,gBAElE,uBAAOqB,KAAK,SAAS2B,MAAO,kB,GAlDlBW,IAAMC,WCqDjBY,E,kDApDX,WAAY9B,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT,KAAQ,GACR,QAAW,IAJD,E,gDAQlB,SAAaC,GACTC,KAAKC,SAAL,eACKF,EAAMG,OAAO5B,KAAOyB,EAAMG,OAAOC,U,iCAI1C,SAAoBJ,GAShB,IAAI5B,EAAU4B,EAAMG,OAAOC,MAC3BH,KAAKC,SAAS,CACV,QAAW9B,M,0BAInB,SAAa4B,GACTuB,QAAQC,IAAR,eAAoBvB,KAAKF,MAAMd,KAA/B,oBAA+CgB,KAAKF,MAAM3B,UAC1D6B,KAAKI,MAAMwB,WAAW5B,KAAKF,MAAMd,KAAMgB,KAAKF,MAAM3B,SAClD4B,EAAMS,mB,oBAGV,WAAU,IAAD,OACL,OACI,uBAAMC,SAAU,SAACV,GAAD,OAAW,EAAKW,aAAaX,IAA7C,UACI,uBAAOvB,KAAK,OAAOF,KAAM,OAAQqC,YAAa,OAAQR,MAAOH,KAAKF,MAAMd,KACjE4B,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,MAE9C,wBACIzB,KAAM,WACNsC,SAAU,SAACb,GAAD,OAAW,EAAK8B,oBAAoB9B,IAFlD,SAGKC,KAAKI,MAAM1B,SAASX,KAAI,SAACY,GAAD,OAAO,wBAAQwB,MAAOxB,EAAEzB,GAAjB,SAAsByB,EAAEL,YAE5D,uBAAOE,KAAK,SAAS2B,MAAO,kB,GA/CrBW,IAAMC,WC2Lde,E,kDA5KX,WAAYjC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT,MAAS,GACT,SAAY,GACZ,MAAS,GACT,MAAS,IANC,E,qDAUlB,WACI,IAAIiC,EAAQC,aAAaC,QAAQ,SACjCjC,KAAKC,SAAS,CAAC,MAAS8B,GAAQ/B,KAAKkC,Y,sBAGzC,WAAY,IAAD,OACHC,EAAUnC,KAAKoC,cACnBC,IAAMC,IAAI,sCAAuC,CAACH,YAAUI,MAAK,SAAAC,GAC7D,IAAM1E,EAAQ0E,EAASC,KAAKC,QAC5B,EAAKzC,SAAS,CAAC,MAASnC,OACzB6E,OAAM,SAAAC,GACLtB,QAAQC,IAAIqB,MAGhBP,IAAMC,IAAI,yCAA0C,CAACH,YAAUI,MAAK,SAAAC,GAChE,IAAM9D,EAAW8D,EAASC,KAAKC,QAC/B,EAAKzC,SAAS,CAAC,SAAYvB,OAC5BiE,OAAM,SAAAC,GACLtB,QAAQC,IAAIqB,MAGhBP,IAAMC,IAAI,sCAAuC,CAACH,YAAUI,MAAK,SAAAC,GAC7D,IAAMnD,EAAQmD,EAASC,KAAKC,QAC5B,EAAKzC,SAAS,CAAC,MAASZ,OACzBsD,OAAM,SAAAC,GACLtB,QAAQC,IAAIqB,Q,yBAIpB,WACI,OAAI5C,KAAK6C,mBACE,CACH,cAAgB,SAAhB,OAA0B7C,KAAKF,MAAMiC,QAGtC,K,8BAGX,WACI,QAAS/B,KAAKF,MAAMiC,Q,uBAIxB,SAAUzB,EAAOC,GAAW,IAAD,OACvB8B,IAAMS,KAAK,wCAAyC,CAAC,SAAYxC,EAAO,SAAYC,IAC/EgC,MAAK,SAAAC,GACF,IAAMT,EAAQS,EAASC,KAAKV,MAC5BT,QAAQC,IAAR,oEAAyEjB,EAAzE,sBAA4FC,EAA5F,4BAAwHwB,IACxHC,aAAae,QAAQ,QAAShB,GAC9BT,QAAQC,IAAR,+BAEA,EAAKtB,SAAS,CAAC,MAAS8B,GAAQ,EAAKG,aACtCS,OAAM,SAAAK,GACT1B,QAAQC,IAAIyB,Q,oBAIpB,WACIhB,aAAae,QAAQ,QAAS,IAC9B/C,KAAKC,SAAS,CACV,MAAS,GACT,SAAY,GACZ,MAAS,GACT,MAAS,O,4BAIjB,SAAe/C,GAAK,IAAD,OACXiF,EAAUnC,KAAKoC,cACnBC,IACKY,OADL,6CACkD/F,GAAM,CAACiF,YACpDI,MACG,SAAAC,GACI,IAAM3D,EAAO2D,EAASC,KAClBpD,EAAQ,EAAKS,MAAMT,MACvBiC,QAAQC,IAAIlC,GACZA,EAAMA,EAAM6D,WAAU,SAAAC,GAAC,OAAIA,EAAEjG,KAAOA,MAAO2B,EAC3C,EAAKoB,SAAS,CACV,MAASZ,OAGpBsD,OAAM,SAAAK,GACH1B,QAAQC,IAAIyB,Q,wBAIxB,SAAWhE,EAAMb,GAAU,IAAD,OAClBgE,EAAUnC,KAAKoC,cACnBC,IACKS,KAAK,sCAAuC,CAAC,KAAQ9D,EAAM,QAAWb,GAAU,CAACgE,YACjFI,MAAK,SAAAC,GACF,EAAKN,cAERS,OAAM,SAAAK,GACH1B,QAAQC,IAAIyB,Q,2BAIxB,SAAc9F,GAAK,IAAD,OACViF,EAAUnC,KAAKoC,cACnBC,IACKY,OADL,gDACqD/F,GAAM,CAACiF,YACvDI,MAAK,SAAAC,GACYA,EAASC,KAAKC,QAC5B,EAAKzC,SAAS,CACV,SAAY,EAAKH,MAAMpB,SAASgB,QAAO,SAACvB,GAAD,OAAaA,EAAQjB,KAAOA,UAExEyF,OAAM,SAAAK,GACT1B,QAAQC,IAAIyB,Q,2BAIpB,SAAc1E,EAAMiB,EAAMzB,GAAQ,IAAD,OACzBqE,EAAUnC,KAAKoC,cACnBC,IACKS,KAAK,yCAA0C,CAAC,KAAQxE,EAAM,KAAQiB,EAAM,MAASzB,GAAQ,CAACqE,YAC9FI,MAAK,SAAAC,GACF,EAAKN,cAERS,OAAM,SAAAK,GACH1B,QAAQC,IAAIyB,Q,oBAKxB,WAAU,IAAD,OACL,OACI,8BAEI,eAAC,IAAD,WAEI,+BACI,6BAAI,cAAC,IAAD,CAAM3E,GAAI,SAAV,qBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAI,YAAV,wBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAI,mBAAV,8BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAI,SAAV,qBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAI,gBAAV,2BACJ,6BAAK2B,KAAK6C,mBAAqB,wBAAQtE,QAAS,kBAAM,EAAK6E,UAA5B,oBAAwD,cAAC,IAAD,CAAM/E,GAAG,SAAT,wBAG3F,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgF,OAAK,EAACC,KAAK,IAAIC,QAAS,6CAE/B,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUzF,MAAOkC,KAAKF,MAAMhC,UAChE,cAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,YAAYC,QAAS,cAAC,EAAD,CAAa7E,SAAUsB,KAAKF,MAAMpB,SAAUN,cAAe,SAAClB,GAAD,OAAQ,EAAKkB,cAAclB,QAC7H,cAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,mBAAmBC,QAAS,cAAC,EAAD,CAAazF,MAAOkC,KAAKF,MAAMhC,MAAO0D,cAAe,SAAClD,EAAMiB,EAAMzB,GAAb,OAAuB,EAAK0D,cAAclD,EAAMiB,EAAMzB,QAL7J,MAMI,cAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,eAAeC,QAAS,cAAC,EAAD,CAAe7E,SAAUsB,KAAKF,MAAMpB,aAC9E,cAAC,IAAD,CAAO2E,OAAK,EAACC,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUlE,MAAOW,KAAKF,MAAMT,MAAOP,eAAgB,SAAC5B,GAAD,OAAQ,EAAK4B,eAAe5B,QACnH,cAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,gBAAgBC,QAAS,cAAC,EAAD,CAAU7E,SAAUsB,KAAKF,MAAMpB,SAAUkD,WAAY,SAAC5C,EAAMb,GAAP,OAAmB,EAAKyD,WAAW5C,EAAMb,QACzI,cAAC,IAAD,CAAOkF,OAAK,EAACC,KAAK,SAASC,QAAS,cAAC,EAAD,CAAWlD,eAAgB,SAACC,EAAOC,GAAR,OAAqB,EAAKiD,UAAUlD,EAAOC,QAE1G,cAAC,IAAD,CAAO+C,KAAK,IAAIC,QAAS,+BAAM,0FAGnC,cAAC,EAAD,a,GArKFzC,IAAMC,WCJT0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1a6258fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const UserItem = ({user}) => {\n    return(\n        <tr>\n            <td>{user.id}</td>\n            <td>{user.username}</td>\n            <td>{user.date_joined}</td>\n            <td>{user.last_login}</td>\n            <td>{user.email}</td>\n            <td>{user.first_name}</td>\n            <td>{user.last_name}</td>\n            <td>{`${user.is_staff}`}</td>\n            <td>{`${user.is_superuser}`}</td>\n            <td>{user.groups}</td>\n            <td>{user.user_permissions}</td>\n        </tr>\n    )\n}\n\nconst UserList = ({users}) => {\n    return (\n        <table>\n            <th>Id</th>\n            <th>Username</th>\n            <th>Date Joined</th>\n            <th>Last login</th>\n            <th>Email</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Is staff</th>\n            <th>Is superuser</th>\n            <th>Groups</th>\n            <th>Permissions</th>\n            {users.map((u) => <UserItem user={u}/>)}\n        </table>\n    )\n}\n\nexport default UserList;","import {bindReporter} from \"web-vitals/dist/modules/lib/bindReporter\";\n\nconst Footer = () => {\n    return (\n        <div>Footer</div>\n    )\n}\n\nexport default Footer","import {Link} from 'react-router-dom'\n\nconst ProjectItem = ({project, deleteProject}) => {\n    return(\n        <tr>\n            <td>{project.id}</td>\n            <td><Link to={`/project/${project.id}`}>{project.name}</Link></td>\n            <td><button onClick={()=>deleteProject(project.id)} type={'button'}>Delete</button></td>\n        </tr>\n    )\n}\n\nconst ProjectList = ({projects, deleteProject}) => {\n    return (\n        <table>\n            <th>Id</th>\n            <th>Name</th>\n            {projects.map((p) => <ProjectItem project={p} deleteProject={deleteProject}/>)}\n        </table>\n    )\n}\n\nexport default ProjectList;","const TodoItem = ({todo, deactivateTodo}) => {\n    return(\n        <tr>\n            <td>{todo.id}</td>\n            <td>{todo.creator}</td>\n            <td>{todo.text}</td>\n            <td>{todo.project}</td>\n            <td>{`${todo.is_active}`}</td>\n            <td>{todo.created_at}</td>\n            <td>{todo.updated_at}</td>\n            <td><button onClick={()=>deactivateTodo(todo.id)} type={'button'}>Deactivate</button></td>\n        </tr>\n    )\n}\n\nconst TodoList = ({todos, deactivateTodo}) => {\n    return (\n        <table>\n            <th>Id</th>\n            <th>Creator ID</th>\n            <th>Text</th>\n            <th>Project ID</th>\n            <th>Is active</th>\n            <th>Created</th>\n            <th>Updated</th>\n            {todos.map((t) => <TodoItem todo={t} deactivateTodo={deactivateTodo}/>)}\n        </table>\n    )\n}\n\nexport default TodoList;","import {Link, useParams} from 'react-router-dom'\n\nconst ProjectItem = ({project}) => {\n    return (\n        <tr>\n            <td>{project.id}</td>\n            <td><Link to={`/project/${project.id}`}>{project.name}</Link></td>\n            <td>{project.link}</td>\n            <td>{project.users}</td>\n        </tr>\n    )\n}\n\nconst ProjectDetail = ({projects}) => {\n    let {id} = useParams();\n    let p = projects.filter((p) => p.id === (parseInt(id)))[0]\n\n    return (\n        <table>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Link</th>\n            <th>Users</th>\n            {<ProjectItem project={p}/>}\n            {/*<tr>*/}\n            {/*    <td>{p.id}</td>*/}\n            {/*    <td>{p.name}</td>*/}\n            {/*    <td>{p.link}</td>*/}\n            {/*    <td>{p.users}</td>*/}\n            {/*</tr>*/}\n        </table>\n    )\n}\n\nexport default ProjectDetail;","import React from 'react'\n\nclass LoginForm extends React.Component {\n    constructor(prop) {\n        super(prop);\n        this.state = {\n            'login': '',\n            'password': ''\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        // console.log(`login:${this.state.login} pass:${this.state.password}`)\n        this.props.form_get_token(this.state.login, this.state.password)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <input type=\"text\" name={\"login\"} placeholder={\"login\"} value={this.state.login}\n                       onChange={(event) => this.handleChange(event)}/>\n                <input type=\"password\" name={\"password\"} placeholder={\"password\"} value={this.state.value}\n                       onChange={(event) => this.handleChange(event)}/>\n                <input type=\"submit\" value={\"Login!!!!!!!!!!\"}/>\n            </form>\n        )\n    }\n}\n\nexport default LoginForm;","import React from 'react'\n\nclass ProjectForm extends React.Component {\n    constructor(prop) {\n        super(prop);\n        this.state = {\n            'name': '',\n            'link': '',\n            'users': []\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleUsersChange(event) {\n        let users = []\n        if (!event.target.selectedOptions) {\n            this.state['users'] = []\n            return\n        }\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\n            // console.log(event.target.selectedOptions.item(i).value)\n            users.push(parseInt(event.target.selectedOptions.item(i).value))\n        }\n\n        this.setState({\n            'users': users\n        })\n    }\n\n    handleSubmit(event) {\n        console.log(`name:${this.state.name} link:${this.state.link} users:${this.state.users}`)\n        this.props.createProject(this.state.name, this.state.link, this.state.users)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <input type=\"text\" name={\"name\"} placeholder={\"name\"} value={this.state.name}\n                       onChange={(event) => this.handleChange(event)}/>\n                <input type=\"text\" name={\"link\"} placeholder={\"link\"} value={this.state.link}\n                       onChange={(event) => this.handleChange(event)}/>\n\n                <select multiple name={\"users\"}\n                        onChange={(event) => this.handleUsersChange(event)}>\n                    {this.props.users.map((user) => <option value={user.id}>{user.username}</option>)}\n                </select>\n                <input type=\"submit\" value={\"Create\"}/>\n            </form>\n        )\n    }\n}\n\nexport default ProjectForm;","import React from 'react'\n\nclass TodoForm extends React.Component {\n    constructor(prop) {\n        super(prop);\n        this.state = {\n            'text': '',\n            'project': '',\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleProjectChange(event) {\n        // let project = ''\n        // if (!event.target.selectedOptions) {\n        //     this.state['project'] = ''\n        //     return\n        // }\n        // for (let i = 0; i < event.target.selectedOptions.length; i++) {\n        // console.log(event.target.selectedOptions.item(i).value)\n        // }\n        let project = event.target.value\n        this.setState({\n            'project': project\n        })\n    }\n\n    handleSubmit(event) {\n        console.log(`text:${this.state.text} project:${this.state.project}`)\n        this.props.createTodo(this.state.text, this.state.project)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <input type=\"text\" name={\"text\"} placeholder={\"text\"} value={this.state.text}\n                       onChange={(event) => this.handleChange(event)}/>\n\n                <select\n                    name={\"projects\"}\n                    onChange={(event) => this.handleProjectChange(event)}>\n                    {this.props.projects.map((p) => <option value={p.id}>{p.name}</option>)}\n                </select>\n                <input type=\"submit\" value={\"Create\"}/>\n            </form>\n        )\n    }\n}\n\nexport default TodoForm;","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport axios from \"axios\";\nimport UserList from \"./Components/UserList\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport {BrowserRouter, Link, Navigate, Route, Routes} from \"react-router-dom\";\nimport ProjectList from \"./Components/ProjectList\";\nimport TodoList from \"./Components/TodoList\";\nimport ProjectDetail from \"./Components/ProjectDetail\";\nimport LoginForm from \"./Components/LoginForm\";\nimport ProjectForm from \"./Components/ProjectForm\";\nimport TodoForm from \"./Components/TodoForm\";\n\n\nclass App extends React.Component {\n    constructor(prop) {\n        super(prop);\n        this.state = {\n            'users': [],\n            'projects': [],\n            'todos': [],\n            'token': ''\n        }\n    }\n\n    componentDidMount() {\n        let token = localStorage.getItem('token')\n        this.setState({'token': token}, this.get_data)\n    }\n\n    get_data() {\n        let headers = this.get_headers()\n        axios.get('http://127.0.0.1:8000/api/v2/users/', {headers}).then(response => {\n            const users = response.data.results\n            this.setState({'users': users})\n        }).catch(err => {\n            console.log(err)\n        })\n\n        axios.get('http://127.0.0.1:8000/api/v1/projects/', {headers}).then(response => {\n            const projects = response.data.results\n            this.setState({'projects': projects})\n        }).catch(err => {\n            console.log(err)\n        })\n\n        axios.get('http://127.0.0.1:8000/api/v1/todos/', {headers}).then(response => {\n            const todos = response.data.results\n            this.setState({'todos': todos})\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    get_headers() {\n        if (this.is_authenticated()) {\n            return {\n                'Authorization': `Token ${this.state.token}`\n            }\n        }\n        return {}\n    }\n\n    is_authenticated() {\n        return !!this.state.token\n    }\n\n\n    get_token(login, password) {\n        axios.post('http://127.0.0.1:8000/api-token-auth/', {'username': login, 'password': password})\n            .then(response => {\n                const token = response.data.token\n                console.log(`sending post to api-token-auth from get_token using login:${login}, password:${password}, and got token: ${token}`)\n                localStorage.setItem('token', token)\n                console.log(`token saved to localStorage`)\n\n                this.setState({'token': token}, this.get_data)\n            }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    logout() {\n        localStorage.setItem('token', '')\n        this.setState({\n            'users': [],\n            'projects': [],\n            'todos': [],\n            'token': ''\n        })\n    }\n\n    deactivateTodo(id) {\n        let headers = this.get_headers()\n        axios\n            .delete(`http://127.0.0.1:8000/api/v1/todos/${id}`, {headers})\n            .then(\n                response => {\n                    const todo = response.data\n                    let todos = this.state.todos\n                    console.log(todos)\n                    todos[todos.findIndex(x => x.id === id)] = todo\n                    this.setState({\n                        'todos': todos\n                    })\n                })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    createTodo(text, project) {\n        let headers = this.get_headers()\n        axios\n            .post('http://127.0.0.1:8000/api/v1/todos/', {'text': text, 'project': project}, {headers})\n            .then(response => {\n                this.get_data()\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    deleteProject(id) {\n        let headers = this.get_headers()\n        axios\n            .delete(`http://127.0.0.1:8000/api/v1/projects/${id}`, {headers})\n            .then(response => {\n                const users = response.data.results\n                this.setState({\n                    'projects': this.state.projects.filter((project) => project.id !== id)\n                })\n            }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    createProject(name, link, users) {\n        let headers = this.get_headers()\n        axios\n            .post('http://127.0.0.1:8000/api/v2/projects/', {'name': name, 'link': link, 'users': users}, {headers})\n            .then(response => {\n                this.get_data()\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    render() {\n        return (\n            <div>\n                {/*<HashRouter>*/}\n                <BrowserRouter>\n                    {/*<Header/>*/}\n                    <ul>\n                        <li><Link to={'/users'}>Users</Link></li>\n                        <li><Link to={'/projects'}>Projects</Link></li>\n                        <li><Link to={\"/projects/create\"}>Create Project</Link></li>\n                        <li><Link to={'/todos'}>Todos</Link></li>\n                        <li><Link to={\"/todos/create\"}>Create Todo</Link></li>\n                        <li>{this.is_authenticated() ? <button onClick={() => this.logout()}>Logout</button> : <Link to=\"/login\">Login</Link>}</li>\n                    </ul>\n\n                    <Routes>\n                        <Route exact path='/' element={<h1>Hope page</h1>}/>\n                        {/*<Route exact path='/users' element={<Navigate to=\"/\"/>}/>*/}\n                        <Route exact path='/users' element={<UserList users={this.state.users}/>}/>\n                        <Route exact path='/projects' element={<ProjectList projects={this.state.projects} deleteProject={(id) => this.deleteProject(id)}/>}/>\n                        <Route exact path='/projects/create' element={<ProjectForm users={this.state.users} createProject={(name, link, users) => this.createProject(name, link, users)}/>}/>}/>\n                        <Route exact path='/project/:id' element={<ProjectDetail projects={this.state.projects}/>}/>\n                        <Route exact path='/todos' element={<TodoList todos={this.state.todos} deactivateTodo={(id) => this.deactivateTodo(id)}/>}/>\n                        <Route exact path='/todos/create' element={<TodoForm projects={this.state.projects} createTodo={(text, project) => this.createTodo(text, project)}/>}/>\n                        <Route exact path='/login' element={<LoginForm form_get_token={(login, password) => this.get_token(login, password)}/>}/>\n\n                        <Route path='*' element={<main><p>nothing here, 404, page not found, get out of here</p></main>}/>\n                    </Routes>\n\n                    <Footer/>\n                </BrowserRouter>\n            </div>\n        )\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}