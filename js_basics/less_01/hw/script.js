// 1. Задать температуру в градусах по Цельсию. Вывести в alert соответствующую температуру в градусах по Фаренгейту.
// Подсказка: расчёт идёт по формуле: Tf = (9 / 5) * Tc + 32, где Tf – температура по Фаренгейту,
// Tc – температура по Цельсию

let celTemperature = 36.6;
let farTemperature = Math.round(((9 / 5) * celTemperature + 32), 3);
alert(`Your current Fahrenheit body temperateure is ${farTemperature} degrees!`)


// 2. Работа с переменными. Объявить две переменные: admin и name. Записать в name строку ""Василий""; Скопировать
// значение из name в admin. Вывести admin (должно вывести «Василий»).
let admin;
let name;
name = "\"Василий\"";
admin = name;
alert(admin)

// 3. *Чему будет равно JS-выражение 1000 + "108"
/**
 * тк если среди складываемых обьектов есть тип String, то все обьекты будут динамически преобразовываться в String
 * и на выходе должно получиться "1000108"
 */

// 4. *Самостоятельно разобраться с атрибутами тега script (async и defer)
/**
 * Я так понял
 * - при использовании артибута async:
 * браузер продолжает параллельно загрузке скрипта парсить HTML. Но после того, как скрипт загружен - рендеринг блокируется до завершения скрипта.
 * Порядок исполнения скриптов зависит от того какой первый загрузится, может не совпадать с порядком в самом скрипте. При async лучше чтоб порядок скриптов не зависел друг от друга.
 * После завершения скрипта интерпретатор продолжает парсить HTML.
 *
 * - при использовании артибута defer:
 * браузер парсит весь HTML параллельно полной загрузке скрипта. Выполнение скрипта возможно только после полного парсинга HTML.
 * тут пишут что загрузка страничек с несколькими скриптами расположенными в head, на медленном интернетике более эффективно, чем в конце body.
 * https://ourcodeworld.com/articles/read/1379/what-is-the-difference-between-the-async-and-defer-attributes-in-javascript
 *
 */